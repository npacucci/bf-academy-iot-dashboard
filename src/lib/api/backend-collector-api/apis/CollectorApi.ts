/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';

/**
 * 
 */
export class CollectorApi extends runtime.BaseAPI {

    /**
     * Get Battery Current
     */
    async getBatteryCurrentV1CollectorBatteryCurrentGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/v1/collector/battery/current`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.TextApiResponse(response) as any;
    }

    /**
     * Get Battery Current
     */
    async getBatteryCurrentV1CollectorBatteryCurrentGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any> {
        const response = await this.getBatteryCurrentV1CollectorBatteryCurrentGetRaw(initOverrides);
        return await response.value();
    }

    /**
     * Get Battery Output Current
     */
    async getBatteryOutputCurrentV1CollectorBatteryCurrentOutGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/v1/collector/battery/current/out`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.TextApiResponse(response) as any;
    }

    /**
     * Get Battery Output Current
     */
    async getBatteryOutputCurrentV1CollectorBatteryCurrentOutGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any> {
        const response = await this.getBatteryOutputCurrentV1CollectorBatteryCurrentOutGetRaw(initOverrides);
        return await response.value();
    }

    /**
     * Get Battery Voltage
     */
    async getBatteryVoltageV1CollectorBatteryPercentageGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/v1/collector/battery/percentage`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.TextApiResponse(response) as any;
    }

    /**
     * Get Battery Voltage
     */
    async getBatteryVoltageV1CollectorBatteryPercentageGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any> {
        const response = await this.getBatteryVoltageV1CollectorBatteryPercentageGetRaw(initOverrides);
        return await response.value();
    }

    /**
     * Get Battery Voltage
     */
    async getBatteryVoltageV1CollectorBatteryVoltageGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/v1/collector/battery/voltage`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.TextApiResponse(response) as any;
    }

    /**
     * Get Battery Voltage
     */
    async getBatteryVoltageV1CollectorBatteryVoltageGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any> {
        const response = await this.getBatteryVoltageV1CollectorBatteryVoltageGetRaw(initOverrides);
        return await response.value();
    }

    /**
     * Get Inverter Output Power
     */
    async getInverterOutputPowerV1CollectorInverterOutputPowerGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/v1/collector/inverter/output/power`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.TextApiResponse(response) as any;
    }

    /**
     * Get Inverter Output Power
     */
    async getInverterOutputPowerV1CollectorInverterOutputPowerGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any> {
        const response = await this.getInverterOutputPowerV1CollectorInverterOutputPowerGetRaw(initOverrides);
        return await response.value();
    }

    /**
     * Get Inverter Output Voltage
     */
    async getInverterOutputVoltageV1CollectorInverterOutputVoltageGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/v1/collector/inverter/output/voltage`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.TextApiResponse(response) as any;
    }

    /**
     * Get Inverter Output Voltage
     */
    async getInverterOutputVoltageV1CollectorInverterOutputVoltageGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any> {
        const response = await this.getInverterOutputVoltageV1CollectorInverterOutputVoltageGetRaw(initOverrides);
        return await response.value();
    }

    /**
     * Get Solar Current
     */
    async getSolarCurrentV1CollectorSolarCurrentGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/v1/collector/solar/current`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.TextApiResponse(response) as any;
    }

    /**
     * Get Solar Current
     */
    async getSolarCurrentV1CollectorSolarCurrentGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any> {
        const response = await this.getSolarCurrentV1CollectorSolarCurrentGetRaw(initOverrides);
        return await response.value();
    }

    /**
     * Get Solar Power
     */
    async getSolarPowerV1CollectorSolarPowerGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/v1/collector/solar/power`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.TextApiResponse(response) as any;
    }

    /**
     * Get Solar Power
     */
    async getSolarPowerV1CollectorSolarPowerGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any> {
        const response = await this.getSolarPowerV1CollectorSolarPowerGetRaw(initOverrides);
        return await response.value();
    }

    /**
     * Get Solar Voltage
     */
    async getSolarVoltageV1CollectorSolarVoltageGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/v1/collector/solar/voltage`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.TextApiResponse(response) as any;
    }

    /**
     * Get Solar Voltage
     */
    async getSolarVoltageV1CollectorSolarVoltageGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any> {
        const response = await this.getSolarVoltageV1CollectorSolarVoltageGetRaw(initOverrides);
        return await response.value();
    }

    /**
     * Get Vrm Status
     */
    async getVrmStatusV1CollectorVrmStatusGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/v1/collector/vrm/status`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.TextApiResponse(response) as any;
    }

    /**
     * Get Vrm Status
     */
    async getVrmStatusV1CollectorVrmStatusGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any> {
        const response = await this.getVrmStatusV1CollectorVrmStatusGetRaw(initOverrides);
        return await response.value();
    }

}
